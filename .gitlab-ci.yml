# (c) https://github.com/MontiCore/monticore

image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk11

stages:
  - build
  - deploy
  - check
  - mirror

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script:
    - "gradle build $GRADLE_OPT $ARGS1"
  artifacts:
    paths:
      - target/
      - .gradle/
    expire_in: 1 week

test:
  stage: check
  dependencies:
    - build
  script:
    - "cd sc-trans-test"
    - "gradle --include-build ../. test $GRADLE_OPT $ARGS1"

deploy:
  stage: deploy
  dependencies:
    - build
  script:
    - "gradle publish -PmavenPassword=$pass -PmavenUser=$user $GRADLE_OPT $ARGS2"
  artifacts:
    paths:
      - target/libs/MCStatecharts.jar
    expire_in: 1 week
  only:
    refs:
      - dev

# Mirrors this repository's `dev` and `master` branches to GitHub.
#
# The mirror will always be at either HEAD or HEAD+1 (depending on whether cleanup is necessary).
# For more information, visit: https://git.rwth-aachen.de/monticore/auxiliary-development-tools/github-mirror-tools (Available internally only)
githubmirror:
  stage: mirror
  variables:
    # The repository is edited during this job. To make sure that no changes persist, we instruct GitLab to always
    # create a fresh clone of the repository instead of caching it and attempting to remove any changes.
    #
    # See https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-strategy
    GIT_STRATEGY: clone
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SE_CIBUILD_SSH_PRIV_KEY")
    - echo "$SE_CIBUILD_SSH_PRIV_KEY" | tr -d '\r' | ssh-add -
    - git config --global user.email "noreply-ci@se-rwth.de"
    - git config --global user.name "MontiCore Mirroring Bot"
    - git checkout "$CI_COMMIT_REF_NAME" # GitLab checks out a commit in detached HEAD mode by default, but we want to commit to the branch and push.
    - mkdir -p ~/.ssh
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  script:
    - "curl --location --header \"PRIVATE-TOKEN: $secibuildtoken\" \"https://git.rwth-aachen.de/api/v4/projects/monticore%2Fauxiliary-development-tools%2Fgithub-mirror-tools/repository/files/mirror.sh/raw\" --output mirror.sh"
    - sh mirror.sh
    - rm mirror.sh
    - git add --all
    # We'll simply ignore failures during commit because there is a chance that no files were changed. In this case the
    # remote will be on the same commit as the upstream repository.
    - (git commit -m "[Mirror] Replace all internal links and references") || true
    - git remote add github git@github.com:MontiCore/statecharts.git
    - git push github $CI_COMMIT_BRANCH --force
  only:
    - dev
    - master